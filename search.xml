<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>v-model基本使用</title>
      <link href="/2021/09/07/v-model/"/>
      <url>/2021/09/07/v-model/</url>
      
        <content type="html"><![CDATA[<h3 id="闲言"><a href="#闲言" class="headerlink" title="闲言"></a>闲言</h3><p>距离上次发布文章已经过去挺久的了，这几天因为各种事情状态不是很好，反正挺糟心的，可能是阅历不够，少见多怪吧。写文章的习惯我会努力保持，以后工作也一样。</p><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>将表单元素的value属性和vue数据变量双向绑定在一起</p><ul><li><p>双向绑定</p><p><strong>view</strong> &hArr; <strong>model</strong></p></li></ul><h3 id="双向绑定表单元素"><a href="#双向绑定表单元素" class="headerlink" title="双向绑定表单元素"></a>双向绑定表单元素</h3><h4 id="text"><a href="#text" class="headerlink" title="text"></a>text</h4><pre class="language-none"><code class="language-none">&lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;双向绑定的数据&quot;&gt;</code></pre><h4 id="radio"><a href="#radio" class="headerlink" title="radio"></a>radio</h4><p>数据：gender: ‘男’</p><pre class="language-none"><code class="language-none">&lt;input type&#x3D;&quot;radio&quot; v-model&#x3D;&quot;gender&quot; value&#x3D;&quot;男&quot;&gt;男&lt;input type&#x3D;&quot;radio&quot; v-model&#x3D;&quot;gender&quot; value&#x3D;&quot;女&quot;&gt;女</code></pre><h4 id="checkbox"><a href="#checkbox" class="headerlink" title="checkbox"></a>checkbox</h4><p>数据 ：hobbies: [ ]</p><pre class="language-none"><code class="language-none">&lt;input type&#x3D;&quot;checkbox&quot; value&#x3D;&quot;跑步&quot; v-model&#x3D;&quot;hobbies&quot;&gt;跑步&lt;input type&#x3D;&quot;checkbox&quot; value&#x3D;&quot;羽毛球&quot; v-model&#x3D;&quot;hobbies&quot;&gt;羽毛球&lt;input type&#x3D;&quot;checkbox&quot; value&#x3D;&quot;乒乓球&quot; v-model&#x3D;&quot;hobbies&quot;&gt;乒乓球</code></pre><h4 id="select"><a href="#select" class="headerlink" title="select"></a>select</h4><p>数据：city: ‘ ‘</p><pre class="language-none"><code class="language-none">&lt;select v-model&#x3D;&quot;city&quot;&gt;      &lt;option value&#x3D;&quot;北京&quot;&gt;北京&lt;&#x2F;option&gt;      &lt;option value&#x3D;&quot;上海&quot;&gt;上海&lt;&#x2F;option&gt;      &lt;option value&#x3D;&quot;广州&quot;&gt;广州&lt;&#x2F;option&gt;      &lt;option value&#x3D;&quot;深圳&quot;&gt;深圳&lt;&#x2F;option&gt;&lt;&#x2F;select&gt;</code></pre><h4 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h4><ul><li>.number：以parseFloat的形式转换为数字型</li><li>.trim：清除字符串首尾两侧的空格</li><li>.lazy：在change时才触发，即失焦的时候触发</li></ul><h3 id="实现父子组件数据的双向绑定"><a href="#实现父子组件数据的双向绑定" class="headerlink" title="实现父子组件数据的双向绑定"></a>实现父子组件数据的双向绑定</h3><ul><li><p>父组件无须通过自定义属性向子组件传递数据，直接通过v-model 传递和接收数据</p></li><li><p>父组件无须添加来自子组件的自定义事件</p></li><li><p>子组件发送的自定义事件必须为input</p><p>父组件 App.vue</p><pre class="language-none"><code class="language-none">&lt;template&gt;  &lt;div&gt;    &lt;!-- 直接绑定数据即可 --&gt;    &lt;son v-model&#x3D;&quot;username&quot;&gt;&lt;&#x2F;son&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script&gt;import son from &#39;@&#x2F;components&#x2F;son.vue&#39;export default &#123;  data() &#123;    return &#123;      username: &#39;哈哈&#39;    &#125;  &#125;,  components: &#123;    son  &#125;&#125;&lt;&#x2F;script&gt;&lt;style&gt;&lt;&#x2F;style&gt;</code></pre><p>子组件 son.vue</p><pre class="language-none"><code class="language-none">&lt;template&gt;  &lt;div&gt;  &lt;!-- 将父组件的传递的数据绑定到value --&gt;    &lt;input type&#x3D;&quot;text&quot; :value&#x3D;&quot;value&quot; @blur&#x3D;&quot;blurFn&quot;&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script&gt;export default &#123;  props: &#123;    value: &#123;      type: String    &#125;  &#125;,  methods: &#123;    blurFn(event) &#123;      &#x2F;&#x2F; 自定义事件名必须为input      this.$emit(&#39;input&#39;, event.target.value)    &#125;  &#125;&#125;&lt;&#x2F;script&gt;&lt;style&gt;&lt;&#x2F;style&gt;</code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数组API</title>
      <link href="/2021/08/19/%E6%95%B0%E7%BB%84API/"/>
      <url>/2021/08/19/%E6%95%B0%E7%BB%84API/</url>
      
        <content type="html"><![CDATA[<h4 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a>forEach</h4><p><img src="https://cdn.jsdelivr.net/gh/soxio/imglib@master/hexo/forEach.png" loading="lazy"></p><h4 id="map"><a href="#map" class="headerlink" title="map"></a>map</h4><p><img src="https://cdn.jsdelivr.net/gh/soxio/imglib@master/hexo/map.png" loading="lazy"></p><h4 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h4><p><img src="https://cdn.jsdelivr.net/gh/soxio/imglib@master/hexo/filter.png" loading="lazy"></p><h4 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h4><ul><li>推荐在回调函数后面跟上数据的初始值， 避免出错</li><li>reduce 函数只 return 一次</li></ul><p><img src="https://cdn.jsdelivr.net/gh/soxio/imglib@master/hexo/reduce.png" loading="lazy"></p><h4 id="every"><a href="#every" class="headerlink" title="every"></a>every</h4><p><img src="https://cdn.jsdelivr.net/gh/soxio/imglib@master/hexo/every.png" loading="lazy"></p><h4 id="some"><a href="#some" class="headerlink" title="some"></a>some</h4><p><img src="https://cdn.jsdelivr.net/gh/soxio/imglib@master/hexo/some.png" loading="lazy"></p>]]></content>
      
      
      <categories>
          
          <category> 数组 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数组 </tag>
            
            <tag> API </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>express操作数据库</title>
      <link href="/2021/08/17/express%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2021/08/17/express%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h3 id="创建连接"><a href="#创建连接" class="headerlink" title="创建连接"></a>创建连接</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 引入mysql 第三方模块</span><span class="token keyword">const</span> mysql <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'mysql'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 创建数据库连接关系</span><span class="token keyword">const</span> db <span class="token operator">=</span> mysql<span class="token punctuation">.</span><span class="token function">createPool</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token comment">// 配置连接信息</span>  host<span class="token operator">:</span> <span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span>  user<span class="token operator">:</span> <span class="token string">'root'</span><span class="token punctuation">,</span>  password<span class="token operator">:</span> <span class="token string">'123456'</span><span class="token punctuation">,</span>  database<span class="token operator">:</span> <span class="token string">'bignews'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 查询数据</span>db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">'select * from users'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 打印数据</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><h4 id="方式一（推荐）"><a href="#方式一（推荐）" class="headerlink" title="方式一（推荐）"></a>方式一（推荐）</h4><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 定义sql语句 ?表示占位符</span><span class="token keyword">const</span> sql <span class="token operator">=</span> <span class="token string">'insert into users set ?'</span><span class="token punctuation">;</span><span class="token comment">// 插入数据的属性名需要和数据库的字段名一致</span><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  username<span class="token operator">:</span> <span class="token string">'张三'</span><span class="token punctuation">,</span>  nickname<span class="token operator">:</span> <span class="token string">'小张'</span><span class="token punctuation">&#125;</span><span class="token comment">// 执行语句</span>db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>affectedRows <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'数据插入成功'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h4 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h4><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 定义sql语句 ?表示占位符</span><span class="token keyword">const</span> sql <span class="token operator">=</span> <span class="token string">'insert into users (username, nickname) values (?, ?)'</span><span class="token punctuation">;</span><span class="token comment">// 定义要插入的数据</span><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  username<span class="token operator">:</span> <span class="token string">'张三'</span><span class="token punctuation">,</span>  nickname<span class="token operator">:</span> <span class="token string">'小张'</span><span class="token punctuation">&#125;</span><span class="token comment">// 执行语句</span>db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span><span class="token punctuation">[</span>obj<span class="token punctuation">.</span>username<span class="token punctuation">,</span> obj<span class="token punctuation">.</span>nickname<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>affectedRows <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'数据插入成功'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h3 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h3><h4 id="方式一（推荐）-1"><a href="#方式一（推荐）-1" class="headerlink" title="方式一（推荐）"></a>方式一（推荐）</h4><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> sql <span class="token operator">=</span> <span class="token string">'update users set ? where id = ?'</span><span class="token punctuation">;</span>db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> <span class="token punctuation">[</span>obj<span class="token punctuation">,</span> obj<span class="token punctuation">.</span>id<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>affectedRows <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'数据修改成功'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h4 id="方式二-1"><a href="#方式二-1" class="headerlink" title="方式二"></a>方式二</h4><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> sql <span class="token operator">=</span> <span class="token string">'update users set username = ?, nickname = ? where id = ?'</span><span class="token punctuation">;</span>db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> <span class="token punctuation">[</span>obj<span class="token punctuation">.</span>username<span class="token punctuation">,</span> obj<span class="token punctuation">.</span>nickname<span class="token punctuation">,</span> obj<span class="token punctuation">.</span>id<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>affectedRows <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'数据修改成功'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> sql <span class="token operator">=</span> <span class="token string">'delete from users where id = ?'</span><span class="token punctuation">;</span>db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>affectedRows <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'数据删除成功'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> express </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> express </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>express获取GET和POST请求参数</title>
      <link href="/2021/08/16/express%E8%8E%B7%E5%8F%96%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0/"/>
      <url>/2021/08/16/express%E8%8E%B7%E5%8F%96%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="获取GET请求参数"><a href="#获取GET请求参数" class="headerlink" title="获取GET请求参数"></a>获取GET请求参数</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript">app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 打印请求参数</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h3 id="获取POST请求参数"><a href="#获取POST请求参数" class="headerlink" title="获取POST请求参数"></a>获取POST请求参数</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 加载解析urlencoded请求体的中间件</span>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>extended<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/user'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 打印post请求参数</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>  res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'ok'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> express </category>
          
      </categories>
      
      
        <tags>
            
            <tag> express </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node获取GET和POST请求参数</title>
      <link href="/2021/08/16/Node%E8%8E%B7%E5%8F%96GET%E5%92%8CPOST%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0/"/>
      <url>/2021/08/16/Node%E8%8E%B7%E5%8F%96GET%E5%92%8CPOST%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="获取GET请求参数"><a href="#获取GET请求参数" class="headerlink" title="获取GET请求参数"></a>获取GET请求参数</h3><h4 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h4><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> <span class="token punctuation">[</span>querystring<span class="token punctuation">]</span> <span class="token operator">=</span> req<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'?'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URLSearchParams</span><span class="token punctuation">(</span>querystring<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'id'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h4><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 1. 引入内置模块</span><span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'url'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'request'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 2. 获取参数对象</span>      <span class="token keyword">let</span> query <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span>query<span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 张三</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 23</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre><h3 id="获取POST请求参数"><a href="#获取POST请求参数" class="headerlink" title="获取POST请求参数"></a>获取POST请求参数</h3><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 引入模块</span><span class="token keyword">const</span> querystring <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'querystring'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// post请求参数是通过事件获取的</span>app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'request'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> postParams <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token comment">// 请求参数传递的时候触发data事件</span>    req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span> <span class="token parameter">params</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        postParams <span class="token operator">+=</span> params<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 请求参数传递完成的时候触发data事件</span>    req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'end'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 打印请求完成的参数</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>querystring<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>postParams<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">'ok'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用SSH连接Github</title>
      <link href="/2021/08/14/%E4%BD%BF%E7%94%A8SSH%E8%BF%9E%E6%8E%A5Github/"/>
      <url>/2021/08/14/%E4%BD%BF%E7%94%A8SSH%E8%BF%9E%E6%8E%A5Github/</url>
      
        <content type="html"><![CDATA[<h3 id="本地生成密钥SSH-key"><a href="#本地生成密钥SSH-key" class="headerlink" title="本地生成密钥SSH key"></a>本地生成密钥SSH key</h3><blockquote><p>ssh-keygen -t rsa -C “用户邮箱”</p></blockquote><h3 id="查看生成的密钥"><a href="#查看生成的密钥" class="headerlink" title="查看生成的密钥"></a>查看生成的密钥</h3><blockquote><p>cat ~/.ssh/id_rsa.pub</p></blockquote><h3 id="Github设置密钥"><a href="#Github设置密钥" class="headerlink" title="Github设置密钥"></a>Github设置密钥</h3><blockquote><p>复制上面查看的key，打开<a href="https://github.com/">github</a>，在头像下面点击<code>settings</code>，再点击<code>SSH and GPG keys</code>，新建一个SSH，名字随便。</p></blockquote><h3 id="验证是否连接成功"><a href="#验证是否连接成功" class="headerlink" title="验证是否连接成功"></a>验证是否连接成功</h3><blockquote><p>ssh -T <a href="mailto:&#103;&#105;&#x74;&#x40;&#103;&#x69;&#x74;&#x68;&#117;&#98;&#46;&#x63;&#111;&#x6d;">&#103;&#105;&#x74;&#x40;&#103;&#x69;&#x74;&#x68;&#117;&#98;&#46;&#x63;&#111;&#x6d;</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git常用命令</title>
      <link href="/2021/08/09/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2021/08/09/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="本地仓库"><a href="#本地仓库" class="headerlink" title="本地仓库"></a>本地仓库</h2><h4 id="设置用户名"><a href="#设置用户名" class="headerlink" title="设置用户名"></a>设置用户名</h4><blockquote><p>git config –global user.name “你的github用户名” </p><p>git config –global user.email “你的github邮箱”</p></blockquote><h4 id="初始化仓库"><a href="#初始化仓库" class="headerlink" title="初始化仓库"></a>初始化仓库</h4><blockquote><p>git init</p></blockquote><h4 id="添加文件到暂存区"><a href="#添加文件到暂存区" class="headerlink" title="添加文件到暂存区"></a>添加文件到暂存区</h4><blockquote><p>git add .  添加全部 或者 git add <filename></p></blockquote><h4 id="提交文件到本地仓库"><a href="#提交文件到本地仓库" class="headerlink" title="提交文件到本地仓库"></a>提交文件到本地仓库</h4><blockquote><p>git commit -m ‘项目描述信息’</p></blockquote><h4 id="log记录命令"><a href="#log记录命令" class="headerlink" title="log记录命令"></a>log记录命令</h4><blockquote><p>git log  查看本地仓库版本记录</p><p>git log –oneline  简化显示</p><p>git reflog  查看回退版本步数</p></blockquote><h4 id="版本前进后退"><a href="#版本前进后退" class="headerlink" title="版本前进后退"></a>版本前进后退</h4><blockquote><p>git reset –hard 索引值 【推荐】</p><p>git reset –hard ^ 后退一步</p><p>git reset –hard ~5 后退五步</p></blockquote><h4 id="版本差异对比"><a href="#版本差异对比" class="headerlink" title="版本差异对比"></a>版本差异对比</h4><blockquote><p>git diff [历史版本][文件名]    将工作区的文件和历史版本比较，不带文件名则比较多个文件</p></blockquote><hr><h4 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h4><ul><li>创建分支  git branch [分支名]</li><li>查看分支  git branch -v</li><li>切换分支  git checkout [分支名]</li><li>合并分支<ul><li>第一步 切换到主分支    checkout [主分支]</li><li>第二步  执行 git merge [有新内容的分支名]</li></ul></li><li>合并冲突<ul><li>第一步 编辑文件，删除特殊符号</li><li>第二步 修改文件到理想状态</li><li>第三步 git add [文件名]</li><li>第四步 git commit -m ‘日志信息’  不能带文件名</li></ul></li></ul><hr><h2 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h2><h4 id="ssh连接"><a href="#ssh连接" class="headerlink" title="ssh连接"></a>ssh连接</h4><ul><li><p>生成ssh密钥</p><blockquote><p>ssh-keygen -t rsa -C “邮箱地址”</p></blockquote></li><li><p>一路回车</p></li><li><p>配置:github - <strong>settings</strong> - 左侧 <strong>SSH and GPG keys</strong> - New SSH key - 复制上面生成的 <strong>id_rsa.pub</strong> 文件 里面 key 生成 ssh密钥</p></li></ul><h4 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h4><blockquote><p>git remote add origin(别名) https: // git.coding.net/用户名/项目名.git</p></blockquote><h4 id="推送到远程仓库"><a href="#推送到远程仓库" class="headerlink" title="推送到远程仓库"></a>推送到远程仓库</h4><blockquote><p>git push origin(远程库别名) master</p></blockquote><h4 id="克隆远程仓库"><a href="#克隆远程仓库" class="headerlink" title="克隆远程仓库"></a>克隆远程仓库</h4><blockquote><p>git clone 远程仓库地址</p></blockquote><h4 id="查看或删除远程仓库地址"><a href="#查看或删除远程仓库地址" class="headerlink" title="查看或删除远程仓库地址"></a>查看或删除远程仓库地址</h4><blockquote><p> git remote -v</p><p>git remote rm origin</p></blockquote><h4 id="合并远程仓库的文件"><a href="#合并远程仓库的文件" class="headerlink" title="合并远程仓库的文件"></a>合并远程仓库的文件</h4><ul><li>方式一 git pull –rebase origin master</li><li> 方式二  </li><li>git fetch origin master   【此时只是下载，不合并工作区文件，可以使用 git checkout origin/master 切换查看下载的文件】</li><li>git merge origin/master</li></ul><h4 id="跨团队合作"><a href="#跨团队合作" class="headerlink" title="跨团队合作"></a>跨团队合作</h4><blockquote><p>fork原项目 - 增加功能 - 新建 pull requests  - 原项目主人同意合并</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo常用命令</title>
      <link href="/2021/08/06/title%20hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2021/08/06/title%20hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="clean"><a href="#clean" class="headerlink" title="clean"></a><font face="微软雅黑">clean</font></h1><pre class="language-none"><code class="language-none">$ hexo clean</code></pre><p><font face="微软雅黑" size="4">清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</font></p><h1 id="generate"><a href="#generate" class="headerlink" title="generate"></a><font face="微软雅黑">generate</font></h1><pre class="language-none"><code class="language-none">$ hexo generate</code></pre><p><font face="微软雅黑" size="4">生成站点静态文件。</font></p><p><font face="微软雅黑" size="4">该命令可以简写为：</font></p><pre class="language-none"><code class="language-none">$ hexo g</code></pre><h1 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a><font face="微软雅黑">deploy</font></h1><pre class="language-none"><code class="language-none">$ hexo deploy</code></pre><p><font face="微软雅黑" size="4">部署网站。</font></p><p><font face="微软雅黑" size="4">该命令可以简写为：</font></p><pre class="language-none"><code class="language-none">$ hexo d</code></pre><h1 id="一键生成和部署"><a href="#一键生成和部署" class="headerlink" title="一键生成和部署"></a><font face="微软雅黑">一键生成和部署</font></h1><pre class="language-none"><code class="language-none">$ hexo clean &amp;&amp; hexo g -d</code></pre>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL数据操作语句</title>
      <link href="/2021/08/06/MySQL%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C%E8%AF%AD%E5%8F%A5/"/>
      <url>/2021/08/06/MySQL%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h3 id="查询操作"><a href="#查询操作" class="headerlink" title="查询操作"></a>查询操作</h3><blockquote><p>查询全部    select * from 表名</p><p>查询语法    select [字段，字段] from 表名</p></blockquote><h3 id="增加操作"><a href="#增加操作" class="headerlink" title="增加操作"></a>增加操作</h3><blockquote><p>增加语法    insert into 表名(字段, 字段) values (值1, 值2)</p><p>示例    insert into users(username, nickname) values (‘用户名’, ‘昵称’)</p></blockquote><h3 id="更新操作"><a href="#更新操作" class="headerlink" title="更新操作"></a>更新操作</h3><blockquote><p>更新语法    update users set 字段=值, 字段=值  where 字段=值</p><p>示例    update users set nickname=’大大’,email= ‘<a href="mailto:&#49;&#50;&#51;&#48;&#x36;&#x40;&#113;&#x71;&#46;&#99;&#x6f;&#x6d;">&#49;&#50;&#51;&#48;&#x36;&#x40;&#113;&#x71;&#46;&#99;&#x6f;&#x6d;</a>‘ where id = 2</p></blockquote><h3 id="删除操作"><a href="#删除操作" class="headerlink" title="删除操作"></a>删除操作</h3><blockquote><p>删除语法 delete from 表名 where 字段 = 值</p><p>示例    delete from users where id = 2</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
