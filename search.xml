<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>express操作数据库</title>
      <link href="/2021/08/17/express%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2021/08/17/express%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h3 id="创建连接"><a href="#创建连接" class="headerlink" title="创建连接"></a>创建连接</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入mysql 第三方模块</span></span><br><span class="line"><span class="keyword">const</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建数据库连接关系</span></span><br><span class="line"><span class="keyword">const</span> db = mysql.createPool(&#123;</span><br><span class="line">  <span class="comment">// 配置连接信息</span></span><br><span class="line">  <span class="attr">host</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">  <span class="attr">user</span>: <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">  <span class="attr">password</span>: <span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">  <span class="attr">database</span>: <span class="string">&#x27;bignews&#x27;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查询数据</span></span><br><span class="line">db.query(<span class="string">&#x27;select * from users&#x27;</span>, <span class="function">(<span class="params">err, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span>(!err) &#123;</span><br><span class="line">    <span class="comment">// 打印数据</span></span><br><span class="line">    <span class="built_in">console</span>.log(res);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><h4 id="方式一（推荐）"><a href="#方式一（推荐）" class="headerlink" title="方式一（推荐）"></a>方式一（推荐）</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义sql语句 ?表示占位符</span></span><br><span class="line"><span class="keyword">const</span> sql = <span class="string">&#x27;insert into users set ?&#x27;</span>;</span><br><span class="line"><span class="comment">// 插入数据的属性名需要和数据库的字段名一致</span></span><br><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="attr">username</span>: <span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">  <span class="attr">nickname</span>: <span class="string">&#x27;小张&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 执行语句</span></span><br><span class="line">db.query(sql, obj, <span class="function">(<span class="params">err, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span>(err) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(res.affectedRows === <span class="number">1</span>) <span class="built_in">console</span>.log(<span class="string">&#x27;数据插入成功&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义sql语句 ?表示占位符</span></span><br><span class="line"><span class="keyword">const</span> sql = <span class="string">&#x27;insert into users (username, nickname) values (?, ?)&#x27;</span>;</span><br><span class="line"><span class="comment">// 定义要插入的数据</span></span><br><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="attr">username</span>: <span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">  <span class="attr">nickname</span>: <span class="string">&#x27;小张&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 执行语句</span></span><br><span class="line">db.query(sql,[obj.username, obj.nickname], <span class="function">(<span class="params">err, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span>(err) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(res.affectedRows === <span class="number">1</span>) <span class="built_in">console</span>.log(<span class="string">&#x27;数据插入成功&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h3><h4 id="方式一（推荐）-1"><a href="#方式一（推荐）-1" class="headerlink" title="方式一（推荐）"></a>方式一（推荐）</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sql = <span class="string">&#x27;update users set ? where id = ?&#x27;</span>;</span><br><span class="line">db.query(sql, [obj, obj.id], <span class="function">(<span class="params">err, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span>(err) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(res.affectedRows === <span class="number">1</span>) <span class="built_in">console</span>.log(<span class="string">&#x27;数据修改成功&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="方式二-1"><a href="#方式二-1" class="headerlink" title="方式二"></a>方式二</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sql = <span class="string">&#x27;update users set username = ?, nickname = ? where id = ?&#x27;</span>;</span><br><span class="line">db.query(sql, [obj.username, obj.nickname, obj.id], <span class="function">(<span class="params">err, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span>(err) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(res.affectedRows === <span class="number">1</span>) <span class="built_in">console</span>.log(<span class="string">&#x27;数据修改成功&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sql = <span class="string">&#x27;delete from users where id = ?&#x27;</span>;</span><br><span class="line">db.query(sql, <span class="number">4</span>, <span class="function">(<span class="params">err, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span>(err) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(res.affectedRows === <span class="number">1</span>) <span class="built_in">console</span>.log(<span class="string">&#x27;数据删除成功&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> express </category>
          
      </categories>
      
      
        <tags>
            
            <tag> express </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>express获取GET和POST请求参数</title>
      <link href="/2021/08/16/express%E8%8E%B7%E5%8F%96%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0/"/>
      <url>/2021/08/16/express%E8%8E%B7%E5%8F%96%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="获取GET请求参数"><a href="#获取GET请求参数" class="headerlink" title="获取GET请求参数"></a>获取GET请求参数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 打印请求参数</span></span><br><span class="line">    <span class="built_in">console</span>.log(req.query);</span><br><span class="line">    res.send(req.query);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="获取POST请求参数"><a href="#获取POST请求参数" class="headerlink" title="获取POST请求参数"></a>获取POST请求参数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载解析urlencoded请求体的中间件</span></span><br><span class="line">app.use(express.urlencoded(&#123;<span class="attr">extended</span>: <span class="literal">false</span>&#125;))</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">&#x27;/user&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 打印post请求参数</span></span><br><span class="line">  <span class="built_in">console</span>.log(req.body);</span><br><span class="line">  res.send(<span class="string">&#x27;ok&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> express </category>
          
      </categories>
      
      
        <tags>
            
            <tag> express </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node获取GET和POST请求参数</title>
      <link href="/2021/08/16/Node%E8%8E%B7%E5%8F%96GET%E5%92%8CPOST%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0/"/>
      <url>/2021/08/16/Node%E8%8E%B7%E5%8F%96GET%E5%92%8CPOST%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="获取GET请求参数"><a href="#获取GET请求参数" class="headerlink" title="获取GET请求参数"></a>获取GET请求参数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 引入内置模块</span></span><br><span class="line"><span class="keyword">const</span> url = <span class="built_in">require</span>(<span class="string">&#x27;url&#x27;</span>);</span><br><span class="line">app.on(<span class="string">&#x27;request&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 2. 获取参数对象</span></span><br><span class="line">      <span class="keyword">let</span> query = url.parse(req.url, <span class="literal">true</span>).query;</span><br><span class="line">      <span class="built_in">console</span>.log(query.name); <span class="comment">// 张三</span></span><br><span class="line">      <span class="built_in">console</span>.log(query.age); <span class="comment">// 23</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="获取POST请求参数"><a href="#获取POST请求参数" class="headerlink" title="获取POST请求参数"></a>获取POST请求参数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入模块</span></span><br><span class="line"><span class="keyword">const</span> querystring = <span class="built_in">require</span>(<span class="string">&#x27;querystring&#x27;</span>);</span><br><span class="line"><span class="comment">// post请求参数是通过事件获取的</span></span><br><span class="line">app.on(<span class="string">&#x27;request&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> postParams = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="comment">// 请求参数传递的时候触发data事件</span></span><br><span class="line">    req.on(<span class="string">&#x27;data&#x27;</span>, <span class="function"><span class="params">params</span> =&gt;</span> &#123;</span><br><span class="line">        postParams += params;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="comment">// 请求参数传递完成的时候触发data事件</span></span><br><span class="line">    req.on(<span class="string">&#x27;end&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 打印请求完成的参数</span></span><br><span class="line">        <span class="built_in">console</span>.log(querystring.parse(postParams));</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    res.end(<span class="string">&#x27;ok&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用SSH连接Github</title>
      <link href="/2021/08/14/%E4%BD%BF%E7%94%A8SSH%E8%BF%9E%E6%8E%A5Github/"/>
      <url>/2021/08/14/%E4%BD%BF%E7%94%A8SSH%E8%BF%9E%E6%8E%A5Github/</url>
      
        <content type="html"><![CDATA[<h3 id="本地生成密钥SSH-key"><a href="#本地生成密钥SSH-key" class="headerlink" title="本地生成密钥SSH key"></a>本地生成密钥SSH key</h3><blockquote><p>ssh-keygen -t rsa -C “用户邮箱”</p></blockquote><h3 id="查看生成的密钥"><a href="#查看生成的密钥" class="headerlink" title="查看生成的密钥"></a>查看生成的密钥</h3><blockquote><p>cat ~/.ssh/id_rsa.pub</p></blockquote><h3 id="Github设置密钥"><a href="#Github设置密钥" class="headerlink" title="Github设置密钥"></a>Github设置密钥</h3><blockquote><p>复制上面查看的key，打开<a href="https://github.com/">github</a>，在头像下面点击<code>settings</code>，再点击<code>SSH and GPG keys</code>，新建一个SSH，名字随便。</p></blockquote><h3 id="验证是否连接成功"><a href="#验证是否连接成功" class="headerlink" title="验证是否连接成功"></a>验证是否连接成功</h3><blockquote><p>ssh -T <a href="mailto:&#x67;&#105;&#x74;&#64;&#103;&#105;&#116;&#104;&#117;&#x62;&#46;&#x63;&#111;&#109;">&#x67;&#105;&#x74;&#64;&#103;&#105;&#116;&#104;&#117;&#x62;&#46;&#x63;&#111;&#109;</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git常用命令</title>
      <link href="/2021/08/09/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2021/08/09/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="本地仓库"><a href="#本地仓库" class="headerlink" title="本地仓库"></a>本地仓库</h2><h4 id="设置用户名"><a href="#设置用户名" class="headerlink" title="设置用户名"></a>设置用户名</h4><blockquote><p>git config –global user.name “你的github用户名” </p><p>git config –global user.email “你的github邮箱”</p></blockquote><h4 id="初始化仓库"><a href="#初始化仓库" class="headerlink" title="初始化仓库"></a>初始化仓库</h4><blockquote><p>git init</p></blockquote><h4 id="添加文件到暂存区"><a href="#添加文件到暂存区" class="headerlink" title="添加文件到暂存区"></a>添加文件到暂存区</h4><blockquote><p>git add .  添加全部 或者 git add <filename></p></blockquote><h4 id="提交文件到本地仓库"><a href="#提交文件到本地仓库" class="headerlink" title="提交文件到本地仓库"></a>提交文件到本地仓库</h4><blockquote><p>git commit -m ‘项目描述信息’</p></blockquote><h4 id="log记录命令"><a href="#log记录命令" class="headerlink" title="log记录命令"></a>log记录命令</h4><blockquote><p>git log  查看本地仓库版本记录</p><p>git log –oneline  简化显示</p><p>git reflog  查看回退版本步数</p></blockquote><h4 id="版本前进后退"><a href="#版本前进后退" class="headerlink" title="版本前进后退"></a>版本前进后退</h4><blockquote><p>git reset –hard 索引值 【推荐】</p><p>git reset –hard ^ 后退一步</p><p>git reset –hard ~5 后退五步</p></blockquote><h4 id="版本差异对比"><a href="#版本差异对比" class="headerlink" title="版本差异对比"></a>版本差异对比</h4><blockquote><p>git diff [历史版本][文件名]    将工作区的文件和历史版本比较，不带文件名则比较多个文件</p></blockquote><hr><h4 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h4><ul><li>创建分支  git branch [分支名]</li><li>查看分支  git branch -v</li><li>切换分支  git checkout [分支名]</li><li>合并分支<ul><li>第一步 切换到主分支    checkout [主分支]</li><li>第二步  执行 git merge [有新内容的分支名]</li></ul></li><li>合并冲突<ul><li>第一步 编辑文件，删除特殊符号</li><li>第二步 修改文件到理想状态</li><li>第三步 git add [文件名]</li><li>第四步 git commit -m ‘日志信息’  不能带文件名</li></ul></li></ul><hr><h2 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h2><h4 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h4><blockquote><p>git remote add origin(别名) https: // git.coding.net/用户名/项目名.git</p></blockquote><h4 id="推送到远程仓库"><a href="#推送到远程仓库" class="headerlink" title="推送到远程仓库"></a>推送到远程仓库</h4><blockquote><p>git push origin(远程库别名) master</p></blockquote><h4 id="克隆远程仓库"><a href="#克隆远程仓库" class="headerlink" title="克隆远程仓库"></a>克隆远程仓库</h4><blockquote><p>git clone 远程仓库地址</p></blockquote><h4 id="查看或删除远程仓库地址"><a href="#查看或删除远程仓库地址" class="headerlink" title="查看或删除远程仓库地址"></a>查看或删除远程仓库地址</h4><blockquote><p> git remote -v</p><p>git remote rm origin</p></blockquote><h4 id="合并远程仓库的文件"><a href="#合并远程仓库的文件" class="headerlink" title="合并远程仓库的文件"></a>合并远程仓库的文件</h4><ul><li>方式一 git pull –rebase origin master</li><li> 方式二  </li><li>git fetch origin master   【此时只是下载，不合并工作区文件，可以使用 git checkout origin/master 切换查看下载的文件】</li><li>git merge origin/master</li></ul><h4 id="跨团队合作"><a href="#跨团队合作" class="headerlink" title="跨团队合作"></a>跨团队合作</h4><blockquote><p>fork原项目 - 增加功能 - 新建 pull requests  - 原项目主人同意合并</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo常用命令</title>
      <link href="/2021/08/06/title%20hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2021/08/06/title%20hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="clean"><a href="#clean" class="headerlink" title="clean"></a><font face="微软雅黑">clean</font></h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><p><font face="微软雅黑" size="4">清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</font></p><h1 id="generate"><a href="#generate" class="headerlink" title="generate"></a><font face="微软雅黑">generate</font></h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p><font face="微软雅黑" size="4">生成站点静态文件。</font></p><p><font face="微软雅黑" size="4">该命令可以简写为：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><h1 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a><font face="微软雅黑">deploy</font></h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p><font face="微软雅黑" size="4">部署网站。</font></p><p><font face="微软雅黑" size="4">该命令可以简写为：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><h1 id="一键生成和部署"><a href="#一键生成和部署" class="headerlink" title="一键生成和部署"></a><font face="微软雅黑">一键生成和部署</font></h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo g -d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Node获取GET和POST请求参数</title>
      <link href="/2021/08/06/MySQL%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C%E8%AF%AD%E5%8F%A5/"/>
      <url>/2021/08/06/MySQL%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h3 id="查询操作"><a href="#查询操作" class="headerlink" title="查询操作"></a>查询操作</h3><blockquote><p>查询全部    select * from 表名</p><p>查询语法    select [字段，字段] from 表名</p></blockquote><h3 id="增加操作"><a href="#增加操作" class="headerlink" title="增加操作"></a>增加操作</h3><blockquote><p>增加语法    insert into 表名(字段, 字段) values (值1, 值2)</p><p>示例    insert into users(username, nickname) values (‘用户名’, ‘昵称’)</p></blockquote><h3 id="更新操作"><a href="#更新操作" class="headerlink" title="更新操作"></a>更新操作</h3><blockquote><p>更新语法    update users set 字段=值, 字段=值  where 字段=值</p><p>示例    update users set nickname=’大大’,email= ‘<a href="mailto:&#49;&#50;&#51;&#x30;&#54;&#64;&#113;&#x71;&#46;&#x63;&#111;&#x6d;">&#49;&#50;&#51;&#x30;&#54;&#64;&#113;&#x71;&#46;&#x63;&#111;&#x6d;</a>‘ where id = 2</p></blockquote><h3 id="删除操作"><a href="#删除操作" class="headerlink" title="删除操作"></a>删除操作</h3><blockquote><p>删除语法 delete from 表名 where 字段 = 值</p><p>示例    delete from users where id = 2</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
